<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${logger}] [${node}]: ${message}" />
  <arg name="cloud_planner_url" default="ws://139.196.197.176:30110" />
  <arg name="odom_topic_name" default="sim_p3at/odom"/>
  <arg name="cmd_vel_topic_name" default="sim_p3at/cmd_vel"/>
  <arg name="sim" value="true"/>
  <arg name="urdf_file" default="$(find xacro)/xacro '$(find ai_robot_core)/config/urdf/pioneer3at.urdf'" />
	<arg name="paramfile" default="params_hokuyo.yaml"/>

  <arg name="map_config" default="default.yaml"/>
  <arg name="map_path" default="default.pgm"/>
  <param name="/map_path" value="$(arg map_path)"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(find ai_robot_core)/map/$(arg map_config)"/>

  <!-- <include file="$(find ranger_bringup)/launch/ranger_mini_v1.launch" /> -->
  <include file="$(find ranger_mini_gazebo)/launch/ai_robot_ranger_mini.launch">
    <!-- <remap from="odom" to="sim_p3at/odom" /> -->
  </include>

  <node name="brain_node" pkg="ai_robot_core" type="brain_node" respawn="false" output="screen">
    <remap from="odom" to="$(arg odom_topic_name)" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic_name)" />
  </node>
  <!-- launch-prefix="gdb -ex run /-/-args" -->
  <node name="movebase_node" pkg="ai_robot_core" type="movebase_node" respawn="false" output="screen">
<!--  <node name="movebase_node" pkg="ai_robot_core" type="movebase_node" respawn="false" output="screen">-->
    <param name="cloud_planner_url" value="$(arg cloud_planner_url)" />
    <!-- <rosparam command="load" ns="simple_local_planner" file="$(find ai_robot_core)/config/simple_local_planner.yaml"/> -->
    <rosparam command="load" file="$(find ai_robot_core)/config/$(arg paramfile)"/>
    <remap from="odom" to="$(arg odom_topic_name)" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic_name)" />
  </node>

  <!-- <node name="oa_node" pkg="ai_robot_core" type="run_oa" respawn="false" output="screen"> -->
  <!--   <rosparam command="load" file="$(find ai_robot_core)/config/oa.yaml" /> -->
  <!--   <param name="sim" type="bool" value="false" /> -->
  <!--   <param name="use_mag" type="bool" value="false" /> -->
  <!--   <param name="angle_nwu_to_map" type="double" value="-71.0" /> -->
  <!--   <remap from="/odom" to="$(arg odom_topic_name)" /> -->
  <!-- </node> -->

  <node name="joystick" pkg="joy" type="joy_node" respawn="false" output="screen"/>
ge
  <!-- suppose odom frame is at the same position as the map origin for test -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 1 map odom"/> -->
  <node name="odom2map_tf_pub" pkg="ai_robot_core" type="odom2map_tf_pub" respawn="false" output="screen" unless="$(arg sim)">
  </node>
  <node name="odom2map_tf_pub" pkg="ai_robot_core" type="odom2map_tf_pub" respawn="false" output="screen" if="$(arg sim)">
    <remap from="odom" to="$(arg odom_topic_name)"/>
  </node>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ai_robot_core)/config/rviz/test.rviz"/>
</launch>
<!-- vim: set ft=xml noet : -->
